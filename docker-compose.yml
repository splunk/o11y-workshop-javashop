version: '3'
services:
  shop:
    image: shabushabu/javashop.shop:latest
    build:
      ./shop
    ports:
      - "8010:8010"
    links:
      - products
      - stock
      - instruments
    environment:
      - USERNAME=${SHOP_USER}
      - TOKEN=${SPLUNK_ACCESS_TOKEN}
      - REALM=${SPLUNK_REALM}
    healthcheck:
      test: curl -sS http://localhost:8010/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
  products:
    image: shabushabu/javashop.products:latest
    build:
      ./products
    ports:
      - "8020:8020"
    healthcheck:
      test: curl -sS http://localhost:8020/products/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
    environment:
      - USERNAME=${SHOP_USER}
      - TOKEN=${SPLUNK_ACCESS_TOKEN}
      - REALM=${SPLUNK_REALM}
  stock:
    image: shabushabu/javashop.stock:latest
    build:
      ./stock
    ports:
      - "8030:8030"
    healthcheck:
      test: curl -sS http://localhost:8030/healthcheck | grep -c 200 > /dev/null
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s 
    environment:
      - USERNAME=${SHOP_USER}
      - TOKEN=${SPLUNK_ACCESS_TOKEN}
      - REALM=${SPLUNK_REALM}
  shoptester:
    image: shabushabu/javashop.tester:latest
    build:
      ./test
    links:
      - shop
    environment:
      - USERNAME=${SHOP_USER}
      - TOKEN=${SPLUNK_ACCESS_TOKEN}
      - REALM=${SPLUNK_REALM}
        # depends_on:
        # iinstruments: 
        # condition: service_healthy
  instruments:
    image:  shabushabu/javashop.instruments:latest
    build:
      ./instruments
    ports:
      - "8040:8040"
    healthcheck:
      test: curl -sS http://localhost:8040/healthcheck | grep -c 200 > /dev/null
      #curl --fail http://localhost:8040//healthcheck  || exit 1
      interval: 2s
      retries: 5
      start_period: 5s
      timeout: 2s
    links:
      - postgresDB
    environment:
      - USERNAME=${SHOP_USER}
      - TOKEN=${SPLUNK_ACCESS_TOKEN}
      - REALM=${SPLUNK_REALM}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresDB:5432/instruments
      - SPRING_DATASOURCE_USERNAME=instruments
      - SPRING_DATASOURCE_PASSWORD=instruments
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      postgresDB:
        condition: service_healthy
  postgresDB:
    image: "postgres:13.1-alpine"
    container_name: postgresDB
    environment:
      - POSTGRES_USER=instruments
      - POSTGRES_PASSWORD=instruments
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 2s
      retries: 5
    volumes:
      - ./db/sql/instruments-latest.sql:/docker-entrypoint-initdb.d/instruments-latest.sql
      - ./db/sql/instruments-chicago.sql:/docker-entrypoint-initdb.d/instruments-chicago.sql


